// Code generated by go-swagger; DO NOT EDIT.

package mounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kraken-hpc/imageapi/models"
)

// MountCreatedCode is the HTTP code returned for type MountCreated
const MountCreatedCode int = 201

/*MountCreated mount succeed

swagger:response mountCreated
*/
type MountCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Mount `json:"body,omitempty"`
}

// NewMountCreated creates MountCreated with default headers values
func NewMountCreated() *MountCreated {

	return &MountCreated{}
}

// WithPayload adds the payload to the mount created response
func (o *MountCreated) WithPayload(payload *models.Mount) *MountCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mount created response
func (o *MountCreated) SetPayload(payload *models.Mount) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MountCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*MountDefault error

swagger:response mountDefault
*/
type MountDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMountDefault creates MountDefault with default headers values
func NewMountDefault(code int) *MountDefault {
	if code <= 0 {
		code = 500
	}

	return &MountDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the mount default response
func (o *MountDefault) WithStatusCode(code int) *MountDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the mount default response
func (o *MountDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the mount default response
func (o *MountDefault) WithPayload(payload *models.Error) *MountDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mount default response
func (o *MountDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MountDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
