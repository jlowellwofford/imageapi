// Code generated by go-swagger; DO NOT EDIT.

package mounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/jlowellwofford/imageapi/models"
)

// UnmountOverlayOKCode is the HTTP code returned for type UnmountOverlayOK
const UnmountOverlayOKCode int = 200

/*UnmountOverlayOK Unmounted

swagger:response unmountOverlayOK
*/
type UnmountOverlayOK struct {

	/*
	  In: Body
	*/
	Payload *models.MountOverlay `json:"body,omitempty"`
}

// NewUnmountOverlayOK creates UnmountOverlayOK with default headers values
func NewUnmountOverlayOK() *UnmountOverlayOK {

	return &UnmountOverlayOK{}
}

// WithPayload adds the payload to the unmount overlay o k response
func (o *UnmountOverlayOK) WithPayload(payload *models.MountOverlay) *UnmountOverlayOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the unmount overlay o k response
func (o *UnmountOverlayOK) SetPayload(payload *models.MountOverlay) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UnmountOverlayOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UnmountOverlayDefault error

swagger:response unmountOverlayDefault
*/
type UnmountOverlayDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUnmountOverlayDefault creates UnmountOverlayDefault with default headers values
func NewUnmountOverlayDefault(code int) *UnmountOverlayDefault {
	if code <= 0 {
		code = 500
	}

	return &UnmountOverlayDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the unmount overlay default response
func (o *UnmountOverlayDefault) WithStatusCode(code int) *UnmountOverlayDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the unmount overlay default response
func (o *UnmountOverlayDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the unmount overlay default response
func (o *UnmountOverlayDefault) WithPayload(payload *models.Error) *UnmountOverlayDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the unmount overlay default response
func (o *UnmountOverlayDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UnmountOverlayDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
