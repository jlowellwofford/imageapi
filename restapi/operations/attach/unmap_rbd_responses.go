// Code generated by go-swagger; DO NOT EDIT.

package attach

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kraken-hpc/imageapi/models"
)

// UnmapRbdOKCode is the HTTP code returned for type UnmapRbdOK
const UnmapRbdOKCode int = 200

/*UnmapRbdOK Unmapped

swagger:response unmapRbdOK
*/
type UnmapRbdOK struct {

	/*
	  In: Body
	*/
	Payload *models.Rbd `json:"body,omitempty"`
}

// NewUnmapRbdOK creates UnmapRbdOK with default headers values
func NewUnmapRbdOK() *UnmapRbdOK {

	return &UnmapRbdOK{}
}

// WithPayload adds the payload to the unmap rbd o k response
func (o *UnmapRbdOK) WithPayload(payload *models.Rbd) *UnmapRbdOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the unmap rbd o k response
func (o *UnmapRbdOK) SetPayload(payload *models.Rbd) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UnmapRbdOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UnmapRbdDefault error

swagger:response unmapRbdDefault
*/
type UnmapRbdDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUnmapRbdDefault creates UnmapRbdDefault with default headers values
func NewUnmapRbdDefault(code int) *UnmapRbdDefault {
	if code <= 0 {
		code = 500
	}

	return &UnmapRbdDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the unmap rbd default response
func (o *UnmapRbdDefault) WithStatusCode(code int) *UnmapRbdDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the unmap rbd default response
func (o *UnmapRbdDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the unmap rbd default response
func (o *UnmapRbdDefault) WithPayload(payload *models.Error) *UnmapRbdDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the unmap rbd default response
func (o *UnmapRbdDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UnmapRbdDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
